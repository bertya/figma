{"version":3,"file":"4.daa8cf20fe62d8b029af.hot-update.js","sources":["webpack:///pages/page.js"],"sourcesContent":["import Layout from '../components/layout';\nimport Router from 'next/router'\nimport React from 'react';\nimport fetch from 'isomorphic-unfetch';\n\nconst imgStyle = {\n  maxWidth:300\n}\n\nclass Page extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      changes:null,\n      images: null\n    }\n  }\n\n  componentDidMount() {\n    const pageData = fetch(`/api/file/${this.props.id}/${this.props.page}`);\n    pageData.then((data)=>{\n      return data.json();\n    }).then((data)=>{\n      this.setState({\n        images: data.images\n      });\n    })\n  }\n\n  displayChanges() {\n    // return this.state.pages.map(page => {\n    //   console.log(21);\n    //   console.log(page);\n    //   return (\n    //     <li key={page.id}><img src={this.state.images[page.id]} style={imgStyle}></img>{page.name}</li>\n    //   );\n    // });\n  }\n\n  render() {\n    console.log(this.state);\n    if (this.state.changes == null) {\n      return (\n        <div>Loading</div>\n      )\n    }\n\n    return ( \n      <Layout>\n        <ul>\n          {this.displayChanges()}\n        </ul>\n      </Layout>\n    );\n  }\n}\n\nPage.getInitialProps = async function (context) {\n  const { id, page } = context.query;\n  // const baseUrl = context.req ? `${context.req.protocol}://${context.req.get('Host')}` : '';\n\n  // console.log(`Fetched show: ${show.name}`);\n\n  return { id, page };\n}\n\nexport default Page;\n\n\n// WEBPACK FOOTER //\n// pages/page.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AADA;AACA;AAGA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AA7CA;AACA;AA+CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AALA;AAMA;AAAA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAQA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}